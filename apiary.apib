HOST: 

--- Extension API v0.1 ---
---
**API still in development, do not consider this final**

*italic keys indicate optional parameters*

**argv** is a dict of the arguments

**[FUTURE]** - indicates the method is planned but is not currently implemented

**[PROTECTED]** - indicates the method does not allow cross-site requests and could require user authentication

## Errors
Errors are returned like the following
    {
        'success': False,
        'error': {
            'key': 'INVALID_PARAMETER',
            'message': "Given parameter is invalid",
            'parameter': 'entity_id'
        }
    }
**Please also note that some of the following keys are separated by a . (full stop)**

| Key                          | Description                                    |
|------------------------------|------------------------------------------------|
| INVALID_PARAMETER            | Given parameter is invalid
| NOT_IMPLEMENTED              | Functionality not implemented yet
| UNKNOWN                      | Unknown error occurred
|                              |
| AUTHENTICATION.NOT_LOGGED_IN | You aren't logged in
|                              |
| DONATION.NO_PAYEE            | No Payee available for this recipient
| DONATION.SERVICE_FAILED      | Payment platform failed to process our request
|                              |
| ENTITY.NOT_FOUND             | Entity not found
|                              |
| RECIPIENT.ALREADY_CLAIMED    | Recipient has already been claimed
---

--
Entity

### Types
| Value  | Description |
|--------|-------------|
| 0      | TV Show
| 1      | Movie
| 2      | Music
| 3      | Game
***
--
Search for an entity (artist, album, track, movie, tv show, game)

| Key      | Type     | Description   |
|----------|----------|---------------|
| title    | string   | Search Title (required for TV Show, Movie, Game)
| year     | int      | Search Year (required for Movie)
|          |          |
| artist   | string   | Search Artist (required for Music)
| *album*  | *string* | *Search Album (optional for Music)*
| *track*  | *string* | *Search Track (optional for Music)*
|          |          |
| *type*   | *int*    | *Entity Type*  **(Optional, but Recommended to put less load on server)**

**THROWABLE ERRORS:** NOT_IMPLEMENTED, UNKNOWN, INVALID_PARAMETER, ENTITY.NOT_FOUND

GET /dajaxice/entity.search/{?argv}
> Accept: application/json
< 200
< Content-Type: application/json
{
    "success": true,
    "items": [
        {
            "id": 5,
            "type": 1,  // Movie
            "title": "The Hitchhiker's Guide to the Galaxy",
            "year": 2005,
            "image": ""
        },
        {
            "id": 9,
            "type": 2,  // Music
            "artist": "M83",
            "album": "Hurry Up, We’re Dreaming",
            "track": "Intro",
            "image": "",
            "recipients": [  // Only returned if entity.search returns 1 result
                {
                    "title": "M83",
                    "type": 1
                },
            ],
        }
    ]
}

**[FUTURE]** Get an Entity by ID

| Key      | Type   | Description   |
|----------|--------|---------------|
| id       | int    | Entity ID

GET /dajaxice/entity.get/{?argv}
> Accept: application/json
< 200
< Content-Type: application/json
{
    "success": true,
    "item": {
        "id": 9,
        "type": 2,  // Music
        "artist": "M83",
        "album": "Hurry Up, We’re Dreaming",
        "track": "Intro",
        "image": "",
        "recipients": [
            {
                "title": "M83",
                "type": 1
            },
        ],
    },
}

--
Recipient

### Types
| Value  | Description                |
|--------|----------------------------|
| 0      | [Music] Label
| 1      | [Music] Artist
| 2      | [Movie] Production Company
***
--
Search for a recipient.

| Key                | Type   | Description                                  |
|--------------------|--------|----------------------------------------------|
| title              | string | Search Title                                 |
| *limit*            | *int*  | *Max number of recipients to return*         |
| *entities_include* | *bool* | *Include recipient entities*                 |
| *entities_limit*   | *int*  | *Max number of recipient entities to return* |

**THROWABLE ERRORS:** None

GET /dajaxice/recipient.search/{?argv}
> Accept: application/json
< 200
< Content-Type: application/json
{
    "success": true,
    "items": [
        {
            "entities": [  // Only included if entities_include parameter is set to True
                {
                    artist: "M83",
                    id: 5,
                    type: 2
                }
            ],
            "id": 15,
            "title": "M83",
            "type": 1,
            "type_label": "Artist"
        }
    ],
}

**[FUTURE]** Get a Recipient by ID

| Key      | Type   | Description   |
|----------|--------|---------------|
| id       | int    | Recipient ID

GET /dajaxice/recipient.id/{?argv}
> Accept: application/json
< 200
< Content-Type: application/json
{
    "success": true,
    "item": {
        "id": 6,
        "title": "M83",
        "type": 1
    },
}

**[PROTECTED]** Claim a recipient

| Key                | Type   | Description               |
|--------------------|--------|---------------------------|
| recipient_id       | int    | ID of recipient to claim  |

**THROWABLE ERRORS:** INVALID_PARAMETER, AUTHENTICATION.NOT_LOGGED_IN, RECIPIENT.ALREADY_CLAIMED, INVALID_PARAMETER

GET /dajaxice/recipient.claim/{?argv}
> Accept: application/json
< 200
< Content-Type: application/json
{
    "success": true,
    "recipient_id": 14
}

--
Donation
--
Create a donation checkout for recipient

| Key          | Type    | Description   |
|--------------|---------|---------------|
| recipient_id | int     | Recipient ID
| entity_id    | int     | Entity ID
| amount       | dec str | Donation Amount

**THROWABLE ERRORS:** INVALID_PARAMETER, DONATION.NO_PAYEE, DONATION.SERVICE_FAILED, DONATION.NOT_IMPLEMENTED

GET /dajaxice/donation.create/{?argv}
> Accept: application/json
< 200
< Content-Type: application/json
{
    "success": true,
    "checkout_url": ""
}